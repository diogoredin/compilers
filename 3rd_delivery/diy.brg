%{

#include <stdio.h>
#include <assert.h>
#include <stdlib.h>
#include <string.h>

#include "node.h"
#include "tabid.h"
#include "postfix.h"

static int sameVar(NODEPTR_TYPE p) {
	return strcmp(LEFT_CHILD(p)->value.s, LEFT_CHILD(RIGHT_CHILD(p))->value.s) ? 0x7fff : 2;
}

extern FILE *outfp;
extern int lbl;
extern char *mklbl(int n);

%}

%term PROG=';' ASSIGN='=' ADD='+' SUB='-' MUL='*' DIV='/' MOD='%' LT='<' GT='>'

%include "y.tab.h"

%%
file: PROG(decls)		1 { fprintf(outfp, pfIMM pfPOP pfRET pfEXTRN, ".prints", ".println"); }
decls: stmt

stmt:	expr			1 {}
expr:	STRING			1 {}

%%

#include "y.tab.h"

extern char **yynames;

static int data(int t, char *s, int a, int user) {
	if (s) fprintf(outfp, pfLABEL pfINTEGER, s, 0);
	return 1;
}

void evaluate(Node *p) {
	extern int trace, errors;

	if (errors) return;
	if (trace) printNode(p, stdout, yynames);

	fprintf(outfp, pfTEXT pfALIGN pfGLOBL pfLABEL, "_main", pfFUNC, "_main");
	
	yyselect(p);
	fprintf(outfp, pfRET pfDATA);

	IDevery(data,0);
	fprintf(outfp, pfEXTRN pfEXTRN pfEXTRN pfEXTRN, "_prints", "_printi", "_println", "_readi");
}